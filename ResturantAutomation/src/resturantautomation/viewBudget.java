/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package resturantautomation;
import java.util.Random;    //For randomizing values for budget since nothing is concrete for now 
import java.lang.Double;    //Display values up to two decimal places
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList; //For list to fill in table
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kimberlyngai
 */
public class viewBudget extends javax.swing.JFrame {

    /**
     * Creates new form viewBugdet
     */
    
    DefaultTableModel model;
    
    public viewBudget() {
        initComponents();
        addRowtoJTable();
    }
    
    //creat class for items in the table
    public class budgetItem{
        public String budgetName;
        public Double budgetAmount;
        public Double budgetSpent;
        public Double budgetRemaining; //based on budgetAmount and budgetSpent
        
        //constructor
        public budgetItem(String name, Double amt, Double spt)
        {
            //DecimalFormat df = new DecimalFormat("#.00");
            //NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance();
            this.budgetName = name;
            this.budgetAmount = amt;
            this.budgetSpent = spt;
            this.budgetRemaining = Double.parseDouble(String.format("%.2f", amt-spt));
            //this.dumAmount = amount;
            //this.dumSpent = spent;
            
        }
    }
    
    //creates the array to save values for future use
    public class budgetArray{
        Double[] arrayAmount = new Double[5];
        Double[] arraySpent = new Double[5];
        
        public budgetArray()
        {
            Random r = new Random();
            for (int i = 0; i < 5; i++)
            {
                Double dum = 1000.00 + 500.00 * r.nextDouble();
                dum = Double.parseDouble(String.format("%.2f", dum));
                arrayAmount[i] = dum;
                
                Double temp = 100.00 + 900.00 * r.nextDouble();
                temp = Double.parseDouble(String.format("%.2f", temp));
                arraySpent[i] = temp;
            }
        }
        
        public void setArray(int index, Double amt, Double spt)
        {
            arrayAmount[index] = amt;
            arraySpent[index] = spt;
        }
        
        public Double getArrayAmount(int index)
        {
            return Double.parseDouble(String.format("%.2f", arrayAmount[index]));
        }
        
        public Double getArraySpent(int index)
        {
            return Double.parseDouble(String.format("%.2f", arraySpent[index]));
        }
    }
    
    //declared outside since it needs to be accessed by other classes/functions
    budgetArray b1 = new budgetArray();
    
    //builds list from budget items
    public ArrayList budgetList()
    {
        ArrayList<budgetItem> list = new ArrayList<budgetItem>();
        budgetItem food = new budgetItem("Food", b1.getArrayAmount(0), b1.getArraySpent(0));
        budgetItem employee = new budgetItem("Employees", b1.getArrayAmount(1), b1.getArraySpent(1));
        budgetItem maintenance = new budgetItem("Maintenance", b1.getArrayAmount(2), b1.getArraySpent(2));
        budgetItem rent = new budgetItem("Rent", b1.getArrayAmount(3), b1.getArraySpent(3));
        budgetItem other = new budgetItem("Other", b1.getArrayAmount(4), b1.getArraySpent(4));
        
        list.add(food);
        list.add(employee);
        list.add(maintenance);
        list.add(rent);
        list.add(other);
        
        return list;
    }
    
    //adds list to table to display
    public void addRowtoJTable()
    {
        model = (DefaultTableModel) jTable1.getModel();
        ArrayList<budgetItem> list = budgetList();
        Object rowData[] = new Object[4];
        for(int i = 0; i < list.size(); i++)
        {
            rowData[0] = list.get(i).budgetName;
            rowData[1] = list.get(i).budgetAmount;
            rowData[2] = list.get(i).budgetSpent;
            rowData[3] = list.get(i).budgetRemaining;
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        returnButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        budgetTitle = new javax.swing.JLabel();
        amtField = new javax.swing.JTextField();
        sptField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        expensePane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(869, 500));

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type of Expense", "Amount Budgeted", "Amount Spent", "Amount Remaining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectItem(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        budgetTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        budgetTitle.setText("Budget");

        jScrollPane2.setViewportView(expensePane);

        jLabel1.setText("Expense");

        jLabel2.setText("Amount Budgeted");

        jLabel3.setText("Amount Spent");

        editButton.setText("Confirm Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(433, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(budgetTitle)
                        .addGap(396, 396, 396))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(amtField, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(sptField))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2))
                                .addGap(366, 366, 366))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(returnButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(budgetTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sptField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editButton)
                .addGap(132, 132, 132)
                .addComponent(returnButton)
                .addGap(313, 313, 313))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //BACK BUTTON
    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
     Manager managePage = new Manager();
        managePage.setVisible(true);
        this.setVisible(false);
            // TODO add your handling code here:
    }//GEN-LAST:event_returnButtonActionPerformed

    String itemName;
    
    private void selectItem(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectItem
        // TODO add your handling code here:
        expensePane.setText(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 0)));
        amtField.setText(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 1)));
        sptField.setText(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 2)));
        
        itemName = expensePane.getText();
    }//GEN-LAST:event_selectItem

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        
        model.setValueAt(amtField.getText(), jTable1.getSelectedRow(), 1);
        model.setValueAt(sptField.getText(), jTable1.getSelectedRow(), 2);
        
        Double newAmt = Double.parseDouble(amtField.getText());
        Double newSpt = Double.parseDouble(sptField.getText());
        
        //based on expense name, the array will update values corresponding to it
        if (itemName.equals("Food"))
        {
            b1.setArray(0, newAmt, newSpt);
            
            //following line is a simple "test" to ensure the array values are updated correctly
            Double newRmn = b1.getArrayAmount(0) - b1.getArraySpent(0);
            
            //displaying the new amount remaining value depends on the array storing values correctly
            model.setValueAt(newRmn, jTable1.getSelectedRow(), 3);
        }
        
        else if (itemName.equals("Employees"))
        {
            b1.setArray(1, newAmt, newSpt);
            Double newRmn = b1.getArrayAmount(1) - b1.getArraySpent(1);
            model.setValueAt(newRmn, jTable1.getSelectedRow(), 3);
        }
        
        else if (itemName.equals("Maintenance"))
        {
            b1.setArray(2, newAmt, newSpt);
            Double newRmn = b1.getArrayAmount(2) - b1.getArraySpent(2);
            model.setValueAt(newRmn, jTable1.getSelectedRow(), 3);
        }
        
        else if (itemName.equals("Rent"))
        {
            b1.setArray(3, newAmt, newSpt);
            Double newRmn = b1.getArrayAmount(3) - b1.getArraySpent(3);
            model.setValueAt(newRmn, jTable1.getSelectedRow(), 3);
        }
        
        else
        {
            b1.setArray(4, newAmt, newSpt);
            Double newRmn = b1.getArrayAmount(4) - b1.getArraySpent(4);
            model.setValueAt(newRmn, jTable1.getSelectedRow(), 3);
        }
        
    }//GEN-LAST:event_editButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //food, employee, maintenance, rent, other
        //String[] budgetItems = new String[5];
        //Double[] budgetAmount = new Double[5];
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewBudget().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amtField;
    private javax.swing.JLabel budgetTitle;
    private javax.swing.JButton editButton;
    private javax.swing.JTextPane expensePane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton returnButton;
    private javax.swing.JTextField sptField;
    // End of variables declaration//GEN-END:variables
}
